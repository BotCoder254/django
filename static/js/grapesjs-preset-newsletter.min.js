/**
 * GrapesJS Newsletter preset (simplified version)
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    define([], factory);
  } else if (typeof module === 'object' && module.exports) {
    module.exports = factory();
  } else {
    root.grapesjs_newsletter = factory();
  }
}(this, function() {
  const newsletterPlugin = function(editor, opts) {
    const options = Object.assign({}, {
      // Default options
      modalTitleImport: 'Import template',
      modalLabelImport: 'Paste your code here',
      modalBtnImport: 'Import',
      importPlaceholder: '',
      cellStyle: {
        'font-size': '12px',
        'font-weight': 300,
        'vertical-align': 'top',
        color: 'rgb(111, 119, 125)',
        margin: 0,
        padding: 0,
      }
    }, opts);

    // Add email-specific blocks
    editor.BlockManager.add('sect100', {
      label: '1 Section',
      category: 'Sections',
      attributes: { class: 'gjs-block-section' },
      content: `<table style="width: 100%; margin: 0 auto; border-spacing: 0; border-collapse: collapse;">
        <tr>
          <td style="width: 100%; vertical-align: top; padding: 10px; background-color: #ffffff;">
            <div data-gjs-type="text">Insert your text here</div>
          </td>
        </tr>
      </table>`,
    });

    editor.BlockManager.add('sect50', {
      label: '2 Sections',
      category: 'Sections',
      attributes: { class: 'gjs-block-section' },
      content: `<table style="width: 100%; margin: 0 auto; border-spacing: 0; border-collapse: collapse;">
        <tr>
          <td style="width: 50%; vertical-align: top; padding: 10px; background-color: #ffffff;">
            <div data-gjs-type="text">Section 1</div>
          </td>
          <td style="width: 50%; vertical-align: top; padding: 10px; background-color: #ffffff;">
            <div data-gjs-type="text">Section 2</div>
          </td>
        </tr>
      </table>`,
    });

    editor.BlockManager.add('text', {
      label: 'Text',
      category: 'Basic',
      attributes: { class: 'gjs-block-text' },
      content: {
        type: 'text',
        content: 'Insert your text here',
        style: { padding: '10px' },
        activeOnRender: true
      },
    });

    editor.BlockManager.add('image', {
      label: 'Image',
      category: 'Basic',
      attributes: { class: 'gjs-block-image' },
      content: {
        type: 'image',
        style: { padding: '10px' },
        activeOnRender: true
      },
    });

    editor.BlockManager.add('button', {
      label: 'Button',
      category: 'Basic',
      attributes: { class: 'gjs-block-button' },
      content: `<a href="#" style="display:inline-block; padding:10px 20px; background-color:#4F46E5; color:#ffffff; text-decoration:none; border-radius:4px; text-align:center; font-family:Arial, sans-serif;">Click Me</a>`,
    });

    editor.BlockManager.add('divider', {
      label: 'Divider',
      category: 'Basic',
      attributes: { class: 'gjs-block-divider' },
      content: `<table style="width: 100%; margin: 0 auto; border-spacing: 0; border-collapse: collapse;">
        <tr>
          <td style="padding: 10px;">
            <hr style="border-top: 1px solid #E5E7EB; margin: 10px 0;">
          </td>
        </tr>
      </table>`,
    });

    editor.BlockManager.add('spacer', {
      label: 'Spacer',
      category: 'Basic',
      attributes: { class: 'gjs-block-spacer' },
      content: `<table style="width: 100%; margin: 0 auto; border-spacing: 0; border-collapse: collapse;">
        <tr>
          <td style="padding: 20px;">&nbsp;</td>
        </tr>
      </table>`,
    });

    // Set default styles for components
    editor.on('load', function() {
      const styleManager = editor.StyleManager;

      styleManager.addProperty('dimension', {
        name: 'Width',
        property: 'width',
        type: 'integer',
        units: ['px', '%'],
        defaults: 'auto',
        min: 0,
      });

      styleManager.addProperty('dimension', {
        name: 'Height',
        property: 'height',
        type: 'integer',
        units: ['px', '%'],
        defaults: 'auto',
        min: 0,
      });

      styleManager.addProperty('dimension', {
        name: 'Padding',
        property: 'padding',
        type: 'composite',
        properties: [
          { name: 'Top', property: 'padding-top', type: 'integer', units: ['px', 'em', '%'], defaults: '0' },
          { name: 'Right', property: 'padding-right', type: 'integer', units: ['px', 'em', '%'], defaults: '0' },
          { name: 'Bottom', property: 'padding-bottom', type: 'integer', units: ['px', 'em', '%'], defaults: '0' },
          { name: 'Left', property: 'padding-left', type: 'integer', units: ['px', 'em', '%'], defaults: '0' },
        ],
      });

      styleManager.addProperty('typography', {
        name: 'Font Family',
        property: 'font-family',
        type: 'select',
        list: [
          { value: 'Arial, Helvetica, sans-serif', name: 'Arial' },
          { value: 'Times New Roman, Times, serif', name: 'Times New Roman' },
          { value: 'Courier New, Courier, monospace', name: 'Courier New' },
          { value: 'Georgia, serif', name: 'Georgia' },
          { value: 'Tahoma, Geneva, sans-serif', name: 'Tahoma' },
          { value: 'Verdana, Geneva, sans-serif', name: 'Verdana' },
        ],
      });

      styleManager.addProperty('typography', {
        name: 'Font Size',
        property: 'font-size',
        type: 'integer',
        units: ['px', 'em', 'rem'],
        defaults: '16px',
        min: 1,
      });

      styleManager.addProperty('typography', {
        name: 'Color',
        property: 'color',
        type: 'color',
      });

      styleManager.addProperty('decorations', {
        name: 'Background Color',
        property: 'background-color',
        type: 'color',
      });

      styleManager.addProperty('decorations', {
        name: 'Text Align',
        property: 'text-align',
        type: 'radio',
        defaults: 'left',
        list: [
          { value: 'left', name: 'Left' },
          { value: 'center', name: 'Center' },
          { value: 'right', name: 'Right' },
          { value: 'justify', name: 'Justify' },
        ],
      });
    });

    // Import command for templates
    editor.Commands.add('gjs-open-import-template', {
      run(editor, sender) {
        const modalContent = editor.Modal.getContentEl();
        const title = options.modalTitleImport;
        const btn = options.modalBtnImport;
        
        editor.Modal.open({
          title,
          content: `<div style="margin-bottom: 10px; font-size: 13px;">
            <div style="margin-bottom: 5px">${options.modalLabelImport}</div>
            <textarea style="width:100%; height:250px" class="gjs-import-textarea">${options.importPlaceholder}</textarea>
          </div>`,
        });
        
        const btnContainer = document.createElement('div');
        btnContainer.innerHTML = `<button class="gjs-btn-import" style="float:right; margin-right:10px; padding: 8px 15px; background-color: #4F46E5; color: white; border-radius: 4px; border: none; cursor: pointer;">${btn}</button>`;
        
        modalContent.querySelector('.gjs-import-textarea').focus();
        modalContent.appendChild(btnContainer);

        btnContainer.querySelector('.gjs-btn-import').onclick = () => {
          const textarea = modalContent.querySelector('.gjs-import-textarea');
          editor.setComponents(textarea.value.trim());
          editor.Modal.close();
        };
      },
    });

    // Add import button to the toolbar
    editor.Panels.addButton('options', {
      id: 'gjs-open-import-template',
      className: 'fa fa-download',
      command: 'gjs-open-import-template',
      attributes: { title: 'Import Template' },
    });
  };

  return newsletterPlugin;
})); 