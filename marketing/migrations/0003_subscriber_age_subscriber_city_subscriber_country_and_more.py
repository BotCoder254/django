# Generated by Django 5.0.1 on 2025-05-12 15:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('marketing', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='subscriber',
            name='age',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subscriber',
            name='city',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='subscriber',
            name='country',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='subscriber',
            name='gender',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='subscriber',
            name='state',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.CreateModel(
            name='ABTestCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('test_type', models.CharField(choices=[('subject', 'Subject Line'), ('content', 'Email Content'), ('sender', 'Sender Name/Email'), ('time', 'Send Time')], max_length=20)),
                ('sample_size', models.IntegerField(default=20, help_text='Percentage of subscribers to test with')),
                ('winner_criteria', models.CharField(choices=[('open_rate', 'Open Rate'), ('click_rate', 'Click Rate'), ('conversion', 'Conversion Rate')], default='open_rate', max_length=20)),
                ('wait_time', models.IntegerField(default=24, help_text='Hours to wait before selecting winner')),
                ('status', models.CharField(choices=[('setup', 'Setup'), ('running', 'Running'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], default='setup', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('winner_selected_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lists', models.ManyToManyField(related_name='ab_tests', to='marketing.subscriberlist')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ab_tests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'A/B Test Campaign',
                'verbose_name_plural': 'A/B Test Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ABTestVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField(blank=True)),
                ('html_content', models.TextField(blank=True)),
                ('from_name', models.CharField(blank=True, max_length=100)),
                ('from_email', models.EmailField(blank=True, max_length=254)),
                ('send_time', models.DateTimeField(blank=True, null=True)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('open_count', models.PositiveIntegerField(default=0)),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ab_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='marketing.abtestcampaign')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='abtestcampaign',
            name='winner_variant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_tests', to='marketing.abtestvariant'),
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('condition_type', models.CharField(choices=[('all', 'Match All Conditions'), ('any', 'Match Any Condition')], default='all', max_length=10)),
                ('conditions', models.JSONField(default=dict, help_text='JSON structure of filter conditions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='abtestcampaign',
            name='segments',
            field=models.ManyToManyField(blank=True, related_name='ab_tests', to='marketing.segment'),
        ),
    ]
